<UserControl x:Class="GistManager.GistManagerWindowControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:vsshell="clr-namespace:Microsoft.VisualStudio.Shell;assembly=Microsoft.VisualStudio.Shell.15.0"
             Background="{DynamicResource {x:Static vsshell:VsBrushes.WindowKey}}"
             Foreground="{DynamicResource {x:Static vsshell:VsBrushes.WindowTextKey}}"
             xmlns:controls="clr-namespace:GistManager.Controls"
             xmlns:behaviors="clr-namespace:GistManager.Behaviors"
             xmlns:styleSelectors="clr-namespace:GistManager.StyleSelectors"
             xmlns:converters="clr-namespace:GistManager.Converters"
             xmlns:syncfusion="http://schemas.syncfusion.com/wpf"
             xmlns:imaging="clr-namespace:Microsoft.VisualStudio.Imaging;assembly=Microsoft.VisualStudio.Imaging"
             xmlns:catalog="clr-namespace:Microsoft.VisualStudio.Imaging;assembly=Microsoft.VisualStudio.ImageCatalog"
             xmlns:theme="clr-namespace:Microsoft.VisualStudio.PlatformUI;assembly=Microsoft.VisualStudio.Shell.15.0"
             mc:Ignorable="d"
            xmlns:local="clr-namespace:GistManager"
             Name="GistManager" AllowDrop="True">

    <UserControl.Resources>
        
        <converters:CommandFailedConverter x:Key="commandFailedConverter" />
        <converters:BoolsToVisibilityConverter x:Key="boolsToVisibilityConverter" />
        <converters:StringAggregatorConverter x:Key="stringAggregatorConverter" />
        <converters:SubstringConverter x:Key="substringConverter" />
        <converters:BoolToVisibilityConverter x:Key="boolToVisibilityConverter" />
        <converters:InverseBoolToVisibilityConverter x:Key="inverseBoolToVisibilityConverter" />
        <converters:EmptyStringToVisibilityConverter x:Key="emptyStringToVisibilityConverter" />
        
        <styleSelectors:TreeViewItemStyleSelector x:Key="treeViewItemStyleSelector" />
        
        <ResourceDictionary x:Key="MainDictionary">
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary  Source="Styles/ToolbarStyles.xaml"/>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>

        <CollectionViewSource x:Key="publicGistsSource" 
                              Source="{Binding Gists}"                               
                              behaviors:CollectionViewSourceFilterBehavior.FilterCommand="{Binding PublicFilterCommand}"
                              behaviors:CollectionViewSourceFilterBehavior.FilterTextBox="{Binding ElementName=searchBox}" />
        <CollectionViewSource x:Key="privateGistsSource" 
                              Source="{Binding Gists}"
                              behaviors:CollectionViewSourceFilterBehavior.FilterCommand="{Binding PrivateFilterCommand}"
                              behaviors:CollectionViewSourceFilterBehavior.FilterTextBox="{Binding ElementName=searchBox}" />
    </UserControl.Resources>

    <DockPanel>
        <DockPanel x:Name ="ToolbarDP" DockPanel.Dock="Top">
            <ToolBarTray x:Name="LogInToolbar"  DockPanel.Dock="Left" Background="Transparent" 
                         Visibility="{Binding IsAuthenticated, Converter={StaticResource inverseBoolToVisibilityConverter}}">
                <controls:OverflowlessToolbar Background="Transparent" ToolBarTray.IsLocked="True">
                    <Button  x:Name="LogInButton"  Command="{Binding LoginCommand}" ToolTip="Log in"
                     Focusable="False" 
                    Style="{StaticResource toolBarButtonStyle}">
                        <imaging:CrispImage Width="16" Height="16" Moniker="{x:Static catalog:KnownMonikers.LoginUser}" />
                    </Button>
                </controls:OverflowlessToolbar>
            </ToolBarTray>

            <ToolBarTray x:Name="TopToolbar" DockPanel.Dock="Left" Background="Transparent" 
                         Visibility="{Binding IsAuthenticated, Converter={StaticResource boolToVisibilityConverter}}">
                <ToolBar Style="{StaticResource ToolbarNoOverlflow}">
                    <Button x:Name="RefreshBT"   Style="{StaticResource toolBarButtonStyle}" ToolTip="Refresh" Command="{Binding RefreshCommand}">
                        <imaging:CrispImage Width="16" Height="16" Moniker="{x:Static catalog:KnownMonikers.Refresh}" />
                    </Button>
                    <Button x:Name="LogoutBT"  Style="{StaticResource toolBarButtonStyle}" Command="{Binding LogoutCommand}" ToolTip="Log out">
                        <imaging:CrispImage Width="16" Height="16" Moniker="{x:Static catalog:KnownMonikers.UserError}" />
                    </Button >
                    <Separator Style="{StaticResource toolBarSeparatorStyle}" Visibility="{Binding IsAuthenticated, Converter={StaticResource boolToVisibilityConverter}}"/>
                    <Button x:Name="SaveButton"  Style="{StaticResource toolBarButtonStyle}" ToolTip="Save Changes" 
                        Click="SaveButton_ClickAsync">
                        <imaging:CrispImage Width="16" Height="16" Moniker="{x:Static catalog:KnownMonikers.Save}" />
                    </Button>
                    <Button x:Name="AddNewGistBT" Style="{StaticResource toolBarButtonStyle}"  ToolTip="Add New Gist"
                         Command="{Binding CreatePrivateGistCommand}" CommandParameter="{Binding CreateGistParameters}">
                        <imaging:CrispImage Width="16" Height="16" Moniker="{x:Static catalog:KnownMonikers.NewListItem}" />
                    </Button >
                    <Button x:Name="AddNewGistFileBT" Style="{StaticResource toolBarButtonStyle}" ToolTip="Add New Gist File"
                        Click="AddNewGistFileBT_ClickAsync" >
                        <imaging:CrispImage Width="16" Height="16" Moniker="{x:Static catalog:KnownMonikers.NewDocument}" />
                    </Button >
                    <Separator Style="{StaticResource toolBarSeparatorStyle}" Visibility="{Binding IsAuthenticated, Converter={StaticResource boolToVisibilityConverter}}"/>
                    <ToggleButton x:Name="OutlineButton" Style="{StaticResource toolBarButtonStyle}" ToolTip="Toggle Outlining"
		                IsChecked="True" Click="OutlineButton_Click">
                        <imaging:CrispImage Width="16" Height="16" Moniker="{x:Static catalog:KnownMonikers.DocumentOutline}" />
                    </ToggleButton>
                    <ToggleButton x:Name="IntellisenseButton" Style="{StaticResource toolBarButtonStyle}" ToolTip="Toggle Intellisense"
                        Click="IntellisenseButton_Click" >
                        <imaging:CrispImage Width="16" Height="16" Moniker="{x:Static catalog:KnownMonikers.IntellisenseLightBulb}" />
                    </ToggleButton>
                    <ToggleButton x:Name="AutoIndentButton" Style="{StaticResource toolBarButtonStyle}" ToolTip="Toggle Auto-Indent"
                    Click="AutoIndentButton_Click" IsChecked="True" >
                        <imaging:CrispImage Width="16" Height="16" Moniker="{x:Static catalog:KnownMonikers.IncreaseIndent}" />
                    </ToggleButton>
                    <ComboBox x:Name="LanguageSelectorCB" Width="100" Margin="4,1,1,1" BorderBrush="Gray" BorderThickness="1"
                          SelectionChanged="LanguageSelectorCB_SelectionChanged">
                    </ComboBox>
                </ToolBar>
                <!--<controls:OverflowlessToolbar Background="Transparent" ToolBarTray.IsLocked="True">


                </controls:OverflowlessToolbar>-->
            </ToolBarTray>

        </DockPanel>

        <TextBox x:Name="searchBox" DockPanel.Dock="Top" Margin="6,8"
                 Text="{Binding SearchExpression, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                 Visibility="{Binding IsAuthenticated, Converter={StaticResource boolToVisibilityConverter}}">
            <TextBox.Template>
                <ControlTemplate>
                    <Border Background="Transparent" BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="2"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <ScrollViewer Margin="2" x:Name="PART_ContentHost" Grid.Column="0" VerticalAlignment="Center"/>
                            <Label x:Name="searchLabel" Foreground="Gray" Margin="2" Grid.Column="0"  Content="Search" Padding="2,0,0,0" FontStyle="Italic" 
                                       VerticalAlignment="Center" Visibility="{Binding SearchExpression, Converter={StaticResource emptyStringToVisibilityConverter}}" />
                            <Border Grid.Column="2" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Padding="2">
                                <Image Width="16" Height="16" HorizontalAlignment="Center" VerticalAlignment="Center" Source="Resources/search.png" RenderOptions.BitmapScalingMode="Fant" />
                            </Border>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </TextBox.Template>
        </TextBox>

        <StackPanel x:Name="LoginPrompt" DockPanel.Dock="Top" Visibility="{Binding IsAuthenticated, Converter={StaticResource inverseBoolToVisibilityConverter}}" Orientation="Vertical" >
            <TextBlock x:Name="LoginPromptTB" Foreground="White" TextWrapping="Wrap" TextAlignment="Center" Margin="4,10,4,10" Text="To access your gists, please log in with your Github account first." />
        </StackPanel>

        <StatusBar x:Name="statusBar" DockPanel.Dock="Bottom" Background="Transparent">
            <StatusBar.ItemsPanel>
                <ItemsPanelTemplate>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                    </Grid>
                </ItemsPanelTemplate>
            </StatusBar.ItemsPanel>
            <StatusBarItem Grid.Column="1" Margin="5,0" Background="Transparent">
                <TextBlock x:Name="StatusBarLabal" Text="{Binding AsyncOperationStatusManager.CurrentOperation.ExecutionInfo}" />
            </StatusBarItem>
            <StatusBarItem Grid.Column="2" HorizontalAlignment="Stretch" HorizontalContentAlignment="Stretch" Margin="10,0" Background="Transparent">
                <ProgressBar Height="2" Foreground="Blue" IsIndeterminate="True"
                             Visibility="{Binding AsyncOperationStatusManager.CurrentOperation.Execution.IsNotCompleted, Converter={StaticResource boolToVisibilityConverter}, FallbackValue=Collapsed}"/>
            </StatusBarItem>
        </StatusBar>

        <StackPanel x:Name="errorPanel" DockPanel.Dock="Bottom" Background="Transparent"
                    Visibility="{Binding ErrorHandler.HasError, Converter={StaticResource boolToVisibilityConverter}}">

            <ToolBarTray x:Name="ErrorTBT" DockPanel.Dock="Top" Background="Transparent">
                <controls:OverflowlessToolbar Background="Transparent" ToolBarTray.IsLocked="True">
                    <Button x:Name="CollapseErrorDialog" Style="{StaticResource toolBarButtonStyle}" ToolTip="Close Error" 
                            Click="CollapseErrorDialog_Click"  >
                        <imaging:CrispImage Width="16" Height="16" Moniker="{x:Static catalog:KnownMonikers.Close}" />
                    </Button>
                    <Button x:Name="ToggleErrorWordwrap" Style="{StaticResource toolBarButtonStyle}" ToolTip="Toggle Wordwrap" Click="ToggleErrorWordwrap_Click">
                        <imaging:CrispImage Width="16" Height="16" Moniker="{x:Static catalog:KnownMonikers.WordWrap}" />
                    </Button>
                    <Button x:Name="CopyErrorText" Style="{StaticResource toolBarButtonStyle}" ToolTip="Copy Text" Click="CopyErrorText_Click" >
                        <imaging:CrispImage Width="16" Height="16" Moniker="{x:Static catalog:KnownMonikers.Copy}" />
                    </Button>
                </controls:OverflowlessToolbar>
            </ToolBarTray>

            <StackPanel Orientation="Horizontal">
                <Image VerticalAlignment="Top" Source="Resources/exclamationpoint.png" Width="16"></Image>
                <TextBlock Foreground="Red"  Text="ERROR: " TextWrapping="Wrap" Margin="2" />
                <TextBlock x:Name="ErrorHeader" Foreground="Red"  Text="{Binding ErrorHandler.ErrorInfo}" TextWrapping="Wrap" Margin="2" />
            </StackPanel>

            <ScrollViewer Width="{Binding ElementName=errorPanel, Path=ActualWidth}" MinHeight="0" MaxHeight="200">
                <TextBlock x:Name="ErrorMessageDetailsTB" TextWrapping="Wrap" Margin="2" Foreground="AliceBlue"
                            Text="{Binding ErrorHandler.Error}" />
            </ScrollViewer>

        </StackPanel>




        <Grid x:Name="MidPanel" 
                Visibility="{Binding IsAuthenticated, Converter={StaticResource boolToVisibilityConverter}}">

            <Grid.RowDefinitions>
                <RowDefinition Height="100" MinHeight="100" x:Name="GistTreeRow" />
                <RowDefinition Height="3" />
                <RowDefinition  MinHeight="200" x:Name="GistDetailsRow"/>
            </Grid.RowDefinitions>

            <GridSplitter Grid.Row="1" Background="Transparent" BorderThickness="1" BorderBrush="#909090" 
                          HorizontalAlignment="Stretch"  />

            <ScrollViewer x:Name="GistTreeScroller" Grid.Row="0" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto" SizeChanged="GistTreeScroller_SizeChanged" >
                <Grid>
                    <StackPanel x:Name="GistTreeSP" Orientation="Vertical" >
                        <controls:GistTreeViewDisplay x:Name="PublicGistGTVD" 
                                          ExpanderHeader="Public gists" 
                                          ExpanderIsExpanded="True"
                                          Margin="4,0,4,10"
                                          ExpanderIsEnabled="True"
                                          TreeViewItemsSource="{Binding Source={StaticResource publicGistsSource}}"
                                          Visibility="{Binding IsInErrorMode, Converter={StaticResource inverseBoolToVisibilityConverter}}"
                                          CreateGistCommand="{Binding CreatePublicGistCommand}"
                                          RemoveGistCommand="{Binding RemoveGistCommand}"
                                          CreateGistFileCommand="{Binding CreateGistFileCommand}"/>
                        <controls:GistTreeViewDisplay x:Name="PrivateGistGTVD"
                                          ExpanderHeader="Private gists" 
                                          Margin="4,0,4,10"
                                          ExpanderIsExpanded="False"
                                          ExpanderIsEnabled="True"
                                          TreeViewItemsSource="{Binding Source={StaticResource privateGistsSource}}"
                                          Visibility="{Binding IsInErrorMode, Converter={StaticResource inverseBoolToVisibilityConverter}}"
                                          CreateGistCommand="{Binding CreatePrivateGistCommand}"
                                          RemoveGistCommand="{Binding RemoveGistCommand}"
                                          CreateGistFileCommand="{Binding CreateGistFileCommand}"/>
                    </StackPanel>
                </Grid>
            </ScrollViewer>

            <DockPanel  x:Name="gistDetailsPanel" Grid.Row="2" LostFocus="gistDetailsPanel_LostFocus" >
                <Grid  DockPanel.Dock="Top" Grid.Row="2" Margin="4" Height="auto" AllowDrop="True">

                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="auto" MinHeight="30"/>
                        <RowDefinition Height="3" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>

                    <TextBlock x:Name="ParentGistName" Grid.Row="0" FontWeight="ExtraBlack" Padding="2"></TextBlock>

                    <ScrollViewer x:Name="ParentGistDescriptionScroll" Grid.Row="1" VerticalScrollBarVisibility="Auto" >
                        <TextBox x:Name="ParentGistDescriptionTB"  VerticalAlignment="Top" Padding="2,2,2,8" 
                                 FontStyle="Italic" TextWrapping="Wrap" TabIndex="0"
                                LostFocus="ParentGistDescriptionTB_LostFocus" 
                                KeyUp="ParentGistDescriptionTB_KeyUp" ></TextBox>
                    </ScrollViewer>

                    <GridSplitter Grid.Row="2" Background="Transparent" BorderThickness="1" BorderBrush="#909090" HorizontalAlignment="Stretch"/>

                    <TextBox x:Name="GistFilenameTB" Grid.Row="3" DockPanel.Dock="Top" FontWeight="Bold" Padding="2"
                                    TabIndex="1" LostFocus="GistFilenameTB_LostFocus" KeyUp="GistFilenameTB_KeyUp"/>

                </Grid>
                <Grid>
                    <!-- Leave ShowLineNumber, EnableOutlining to True, as otherwise causes control to bug out-->
                    <syncfusion:EditControl x:Name="GistCodeEditor" LineNumberAreaBackground="Transparent" 
                                        OutliningAreaBackground="Transparent" Background="Transparent"
                                        AllowDragDrop="True" AllowDrop="True" Drop="GistCodeEditor_Drop"                                        
                                        DocumentLanguage="CSharp" FontFamily="Consolas" FontSize="12"
                                        TabIndex="2"  AcceptsTab="True"
                                        EnableIntellisense="False" ShowLineNumber="True" EnableOutlining="True"                                          
                                        LostFocus="GistCodeEditor_LostFocus" GotFocus="GistCodeEditor_GotFocus"
                                        EnterKeyBehavior="VS" IsAutoLineNumberAreaWidthEnabled="True" Margin="2"
                                        />
                </Grid>

            </DockPanel>

        </Grid>

    </DockPanel>




</UserControl>
